definitions:
  image.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
      status:
        type: boolean
    type: object
  image.UploadData:
    properties:
      imageUrl:
        type: string
    type: object
  image.UploadResponse:
    properties:
      data:
        $ref: '#/definitions/image.UploadData'
      message:
        type: string
    type: object
  user.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
      status:
        type: boolean
    type: object
  user.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  user.RegisterRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 30
        minLength: 5
        type: string
      username:
        maxLength: 30
        minLength: 5
        type: string
    required:
    - email
    - password
    - username
    type: object
  user.SuccessResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: boolean
    type: object
info:
  contact: {}
  description: This is a sample server for a fitness tracking application.
  title: Fitbyte API
  version: "1.0"
paths:
  /admin/login:
    post:
      consumes:
      - application/json
      description: Authenticate an admin and return JWT token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/user.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.ErrorResponse'
      summary: Admin login
      tags:
      - Admins
  /admin/register:
    post:
      consumes:
      - application/json
      description: Create a new admin account with role 'admin'
      parameters:
      - description: Registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/user.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.ErrorResponse'
      summary: Register a new admin
      tags:
      - Admins
  /image:
    post:
      consumes:
      - multipart/form-data
      description: Upload an image file (jpg/jpeg only, 10KB-2MB)
      parameters:
      - description: Image file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/image.UploadResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/image.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/image.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Upload an image
      tags:
      - Image
  /users/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return JWT token
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/user.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.ErrorResponse'
      summary: User login
      tags:
      - Users
  /users/me:
    get:
      consumes:
      - application/json
      description: Get authenticated user information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/user.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/user.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get current user
      tags:
      - Users
  /users/register:
    post:
      consumes:
      - application/json
      description: Create a new user account with role 'user'
      parameters:
      - description: Registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/user.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/user.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user.ErrorResponse'
      summary: Register a new user
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
